# Project Files Location: #

The project files are conveniently organized within the repository. Below are the locations of each file:

1. DDL and DML Files:

These essential files for database creation and sample data manipulation are located in the SQL_Files folder of the repository.

DDL (Data Definition Language) statements can be found in the DDL.sql file.
DML (Data Manipulation Language) statements containing sample data are stored in the DML.sql file.

2. ER Diagram and Relational Schema:

Visual representations of the database design can be accessed in the Database_Design folder.

The ER diagram, illustrating entity relationships and cardinalities, is available in the ER_Diagram_Project.png file.
For a simplified view of the database structure, refer to the Relational_Schema_Project.png file, showcasing the reduction of the ER diagram into relational schemas.

# Conceptual Design: #

Members Table:

- Represents the individuals who are members of the Health and Fitness Club.
- Assumption: Each member has a unique identifier (member_id) and is characterized by their personal details such as first_name, last_name, email, membership_type, weight, height, body_fat, and cardio_fitness_level.

Trainers Table:

- Contains information about the trainers employed by the club.
- Assumption: Each trainer has a unique identifier (trainer_id) and is described by their first_name, last_name, email, specialization, availability_start, and availability_end.

Administrative Staff Table:

- Stores details of the administrative staff working in various departments of the club.
- Assumption: Similar to the members and trainers, each staff member has a unique identifier (admin_id) and is identified by their first_name, last_name, email, department, and role.

Fitness Goals Table:

- Records the fitness goals set by members.
- Assumption: Each goal is associated with a member through the member_id foreign key. Goals are defined by their goal_type, target_value, and target_date.

Exercise Routines Table:

- Stores information about exercise routines followed by members.
- Assumption: Each routine is linked to a member through the member_id foreign key. Details of the routine, such as routine_details and routine_date, are recorded.

Fitness Achievements Table:

- Captures the achievements attained by members.
- Assumption: Achievements are connected to members via the member_id foreign key. Each achievement includes details such as achievement_details and achievement_date.

Rooms Table:

- Contains data about the rooms or facilities available at the club.
- Assumption: Each room has a unique identifier (room_id) and attributes like room_name and capacity.

Classes Table:

- Stores details of fitness classes offered by the club.
- Assumption: Classes are identified by their class_id and have attributes such as class_name, required_equipment, availability_start, and availability_end. The room where the class takes place is specified using the room_id foreign key.

Bookings Table:

- Tracks bookings made by members for training sessions or classes.
- Assumption: Bookings are associated with members (member_id), trainers (trainer_id), classes (class_id), and rooms (room_id). Details such as booking_type, booking_start_time, and booking_end_time are recorded.

Equipment Table:

- Contains information about the equipment available at the club.
- Assumption: Each equipment item is identified by a unique equipment_id and includes attributes like equipment_name and last_maintenance_date.

Notifications Table:

- Stores notifications sent to members.
- Assumption: Notifications are linked to members via the member_id foreign key. They include a message, read status, and created_at timestamp.

Bills Table:

- Records the financial transactions related to member bookings.
- Assumption: Each bill is associated with a member through the member_id foreign key. It includes details such as description, amount, bill_date, due_date, and status.

# Assumptions regarding Cardinalities and Participation Types: #

Members and Fitness Goals Relationship:

- One-to-Many (1:N): Each member can have multiple fitness goals, but each fitness goal is associated with only one member.

Members and Exercise Routines Relationship:

- One-to-Many (1:N): Each member can have multiple exercise routines, but each routine is associated with only one member.

Members and Fitness Achievements Relationship:

- One-to-Many (1:N): Each member can have multiple fitness achievements, but each achievement is associated with only one member.

Members and Notifications Relationship:

- One-to-Many (1:N): Each member can receive multiple notifications, but each notification is associated with only one member.

Members and Bills Relationship:

- One-to-Many (1:N): Each member can have multiple bills, but each bill is associated with only one member.

Bookings and Members Relationship:

- Many-to-One (N:1): Many bookings can be associated with one member, but each booking is made by only one member.

Bookings and Trainers Relationship:

- Many-to-One (N:1): Many bookings can be associated with one trainer, but each booking is assigned to only one trainer.

Bookings and Classes Relationship:

- Many-to-One (N:1): Many bookings can be associated with one class, but each booking is for only one class.

Bookings and Rooms Relationship:

- Many-to-One (N:1): Many bookings can be made for one room, but each booking is assigned to only one room.

Administrative Staff and Rooms Relationship:

- Many-to-Many (M:N): Each administrative staff member can manage multiple rooms, and each room can be managed by multiple administrative staff members.

Administrative Staff and Classes Relationship:

- Many-to-Many (M:N): Each administrative staff member can manage multiple classes, and each class can be managed by multiple administrative staff members.

Administrative Staff and Equipment Relationship:

- Many-to-Many (M:N): Each administrative staff member can manage multiple equipment items, and each equipment item can be managed by multiple administrative staff members.

Administrative Staff and Bills Relationship:

- Many-to-Many (M:N): Each administrative staff member can oversee multiple bills, and each bill can be overseen by multiple administrative staff members.

# Program Assumptions: #

1. User Registration and Authentication:

- A simple login experience is implemented where users, including members, trainers, and administrative staff, can register accounts.
- Trainers and administrative staff require a special general password during registration for enhanced authentication. This password is known only to authorized personnel.
- Login functionality is simplified to email-based login without passwords for ease of use.

2. Trainer Availability and Scheduling:

- Each trainer has their own fixed hourly schedule each day, implying their availability for personal training sessions during those hours.
- Trainers are responsible for managing their schedules and setting the time slots for which they are available.

3. Billing and Payment Handling:

- For simplicity, personal training sessions incur a fixed fee of $100, while group classes have a fixed fee of $65.
- Billing is automatically handled by the system, with members able to view pending bills and make payments.
- Administrative staff have oversight of all bills, including pending and paid bills, ensuring effective management.

4. Booking Management and Notifications:

- Personal training sessions can either be conducted in a room or elsewhere, while group classes must be conducted in designated rooms with assigned room IDs.
- When trainers reschedule their availability, affected bookings are flagged for cancellation. Trainers are prompted to confirm the rescheduling, and affected members are notified accordingly.
- In the event of administrative actions such as room removal, affected bookings are automatically reassigned to available rooms. If no available rooms remain, the bookings are canceled. For class removals, bookings are always canceled. Members are promptly notified of any changes.

5. Initial Values in Tables:

- All tables, except for notifications, have initial values populated within them. Notifications are generated dynamically as bookings are canceled or rooms are reassigned.

These assumptions aim to streamline user interactions, simplify system operations, and ensure efficient management of bookings, scheduling, and billing processes.

# Bonus Feature: #

For additional functionality, the system has been enriched with two bonus features:

1. Trainer and Admin Registration with Enhanced Authentication:

Trainers and administrative staff members are now able to register accounts within the system. However, to ensure higher authentication standards, a special general password is required during the registration process. This password is known only to authorized personnel and serves as an added layer of security for trainer and admin accounts.

2. Notification System for Member Bookings:

A notification system has been implemented to enhance member experience. Members will now receive notifications when their bookings are canceled due to various reasons such as rescheduled trainer availabilities or class cancellations initiated by the administrative staff. These notifications aim to keep members informed and minimize inconvenience.

These bonus features aim to elevate user experience, improve system security, and streamline communication between members, trainers, and administrative staff.
